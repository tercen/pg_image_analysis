function varargout = presenter_export(varargin)
% PRESENTER_EXPORT M-file for presenter_export.fig
%      PRESENTER_EXPORT, by itself, creates a new PRESENTER_EXPORT or raises the existing
%      singleton*.
%
%      H = PRESENTER_EXPORT returns the handle to a new PRESENTER_EXPORT or the handle to
%      the existing singleton*.
%
%      PRESENTER_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in PRESENTER_EXPORT.M with the given input arguments.
%
%      PRESENTER_EXPORT('Property','Value',...) creates a new PRESENTER_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before presenter_export_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to presenter_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help presenter_export

% Last Modified by GUIDE v2.5 07-Nov-2005 20:29:23

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @presenter_export_OpeningFcn, ...
                   'gui_OutputFcn',  @presenter_export_OutputFcn, ...
                   'gui_LayoutFcn',  @presenter_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before presenter_export is made visible.
function presenter_export_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to presenter_export (see VARARGIN)

% Choose default command line output for presenter_export
handles.output = hObject;
handles.I = varargin{1};
handles.oQ = varargin{2};
handles.xSeries = varargin{3};



focus = [1,1];
xFocus = size(handles.I,3);
If = handles.I(:,:,xFocus);
handles.displayRange = double([0, max(If(:))]);


% Set the display range slider to the appropriate value
% set(handles.cmDisplayRange, 'Visible', 'on');
handles.displayRange = double([0, max(If(:))]);
imType = class(If);
switch imType
    case 'uint8'
        set(handles.cmDisplayRange8Bit, 'checked', 'on');
        set(handles.cmDisplayRange12Bit, 'checked', 'off');
        set(handles.cmDisplayRange16Bit, 'checked', 'off');
        handles.fullRange = 2^8;
    case 'uint16'
         set(handles.cmDisplayRange8Bit, 'checked', 'off');
        set(handles.cmDisplayRange12Bit, 'checked', 'off');
        set(handles.cmDisplayRange16Bit, 'checked', 'on');
        handles.fullRange = 2^16;
end
dVal = handles.displayRange(2)/handles.fullRange;
set(handles.slDisplayRange, 'Value' ,dVal);

% show images
[handles.hImage, handles.hSpots] = showImage(handles.axImage, handles.oQ(:,:,xFocus), If, handles.fullRange);
hAx = [handles.axImage, handles.axSegSpot, handles.axTrueSpot, handles.axQuantification];
[handles.hFocusPlot, handles.hSpot] = focalSpot(hAx, If, handles.hSpots(focus(1), focus(2)), handles.oQ(focus(1),focus(2),:),  ... 
                                handles.hSpots(end, end), handles.oQ(end, end,:), xFocus, handles.xSeries, handles.fullRange);

handles.focus       = focus;
handles.xFocus      = xFocus;


d = get(handles.hImage, 'CData');
set(handles.hImage, 'CData',d/dVal); 
d = get(handles.hSpot, 'CData');
set(handles.hSpot, 'CData',d/dVal); 
% Update handles structure
guidata(hObject, handles);

% UIWAIT makes presenter_export wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = presenter_export_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in cbSig.
function cbSig_Callback(hObject, eventdata, handles)
% hObject    handle to cbSig (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of cbSig


% --- Executes on button press in cbBg.
function cbBg_Callback(hObject, eventdata, handles)
% hObject    handle to cbBg (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of cbBg


% --- Executes on button press in cbSigmBg.
function cbSigmBg_Callback(hObject, eventdata, handles)
% hObject    handle to cbSigmBg (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of cbSigmBg

function image_Callback(hObject, eventData, handles)
point = get(handles.axImage, 'CurrentPoint');
yPoint = point(1,1) * ones(size(handles.x));
xPoint = point(1,2) * ones(size(handles.y));
dx = handles.x-xPoint;
dy = handles.y-yPoint;
L = (dx.^2 + dy.^2);

[minL, iFocus, jFocus] = minn(L);
iOld = handles.focus(1);
jOld = handles.focus(2);
hAx = [handles.axImage, handles.axSegSpot, handles.axTrueSpot, handles.axQuantification];
[handles.hFocusPlo, handles.hSpot] = focalSpot(hAx, handles.I(:,:,handles.xFocus) , handles.hSpots(iFocus, jFocus), handles.oQ(iFocus, jFocus, :), handles.hSpots(iOld, jOld), handles.oQ(iOld, jOld), handles.xFocus, handles.xSeries, handles.fullRange);
handles.focus = [iFocus, jFocus];
dVal = get(handles.slDisplayRange, 'Value');
 
d = get(handles.hSpot, 'CData');
set(handles.hSpot, 'CData',d/dVal); 


guidata(hObject, handles);

function spot_Callback(hObject, eventData, handles);
iOld = handles.focus(1);
jOld = handles.focus(2);

qOld = handles.oQ(iOld, jOld,:);
hOldFocus = handles.hSpots(iOld, jOld);
[iNew, jNew] = find(handles.hSpots == hObject);
qNew = handles.oQ(iNew, jNew,:);

hAx = [handles.axImage, handles.axSegSpot, handles.axTrueSpot, handles.axQuantification];
[handles.hFocusPlot, handles.hSpot] = focalSpot(hAx, handles.I(:,:,handles.xFocus), hObject, qNew, hOldFocus, qOld, handles.xFocus, handles.xSeries, handles.fullRange);
dVal = get(handles.slDisplayRange, 'Value');

d = get(handles.hSpot, 'CData');
set(handles.hSpot, 'CData',d/dVal); 

handles.focus = [iNew, jNew];
guidata(hObject, handles);

function plot_Callback(hObject, eventData, handles)
delete(handles.hFocusPlot);
xPoint = get(handles.axQuantification,'CurrentPoint');
xPoint = xPoint(1,1) * ones(size(handles.xSeries));
[mdx,handles.xFocus] = min(abs(xPoint - handles.xSeries));
[handles.hImage, handles.hSpots] = showImage(handles.axImage, handles.oQ(:,:,handles.xFocus), handles.I(:,:,handles.xFocus), handles.fullRange);
hAx = [handles.axImage, handles.axSegSpot, handles.axTrueSpot, handles.axQuantification];
focus = handles.focus;
[handles.hFocusPlot, handles.hSpot] = focalSpot(hAx, handles.I(:,:,handles.xFocus), handles.hSpots(focus(1), focus(2)), handles.oQ(focus(1),focus(2),:), handles.hSpots(end, end), handles.oQ(end, end,:), handles.xFocus, handles.xSeries, handles.fullRange);
dVal = get(handles.slDisplayRange, 'Value');
d = get(handles.hImage, 'CData');
set(handles.hImage, 'CData',d/dVal); 
d = get(handles.hSpot, 'CData');
set(handles.hSpot, 'CData',d/dVal); 

guidata(handles.axQuantification, handles);


function [hImage, hSpots] = showImage(hAxis, oQ, I, fullRange);


axes(hAxis);
I = double(I)/fullRange;
[hImage, hSpots] =show(oQ, I,[0,1]);

%set(hImage, 'ButtonDownFcn', 'presenter_export(''image_Callback'',gcbo,[],guidata(gcbo))');
set(hSpots, 'ButtonDownFcn', 'presenter(''spot_Callback'',gcbo,[],guidata(gcbo))');

function [hFocusPlot, hFocusImage] = focalSpot(hAx, I, hNewFocus, qNew, hOldFocus, qOld, xFocus, xSeries, fullRange);

axes(hAx(1));
if get(qOld(xFocus), 'isSpot');
    set(hOldFocus,'color', 'w', 'linewidth', 0.5);
else
    set(hOldFocus, 'color', 'k', 'linewidth', 0.5);
end

set(hNewFocus, 'color', 'm', 'linewidth', 2);

axes(hAx(2))
bin = get(qNew(xFocus), 'binSpot');
ignored = get(qNew(xFocus), 'ignoredPixels');
segview = double(bin);

[iIgnored, jIgnored] = find(ignored == 1);
segview(iIgnored, jIgnored) = 0.5;

imshow(segview);
colormap(gca, 'jet');

axes(hAx(3))
cLu = get(qNew(xFocus), 'cLu');
x = cLu(1):cLu(1) + size(bin,1) - 1;
y = cLu(2):cLu(2) + size(bin,2) - 2;
Ispot = double(I(x,y))/fullRange;
hFocusImage = imshow(Ispot, [0,1]);
colormap(gca, 'jet');
hold on
B = bwboundaries(bin);
bound = cell2mat(B);

isSpot = get(qNew(xFocus), 'isSpot');
if isSpot
        plot(bound(:,2) , bound(:,1), 'w');
else
        plot(bound(:,2) , bound(:,1), 'k');
end
axes(hAx(4));
hold off

nImages = length(qNew);
if nImages > 1
    %image series
  
    for i=1:nImages
        s(i) = get(qNew(i), 'medianSignal');
        b(i) = get(qNew(i), 'medianBackground');
    end
    n = s-b;
    hold off
    h(1) = plot(xSeries, s, 'ro-');
    hold on
    h(2) = plot(xSeries, b, 'bo-');
    h(3) = plot(xSeries, n, 'go-');
    vAx = axis;
    vAx(3) = 0;
    axis(vAx);
    hFocusPlot = plot(xSeries(xFocus), [s(xFocus),b(xFocus),n(xFocus)], 'mdiamond');
    set(hFocusPlot, 'markerfacecolor', 'm');
    set(h, 'ButtonDownFcn', 'presenter(''plot_Callback'',gcbo,[],guidata(gcbo))');
    set(h, 'MarkerSize', 6);
else
    s = get(qNew, 'medianSignal');
    b = get(qNew, 'medianBackground');
    n = s-b;
    h = bar(1,s);
    hFocusPlot = h;
    set(h, 'facecolor', 'r');
    hold on
    h = bar(2,b);
    set(h, 'facecolor', 'b');
    h = bar(3,n);
    set(h, 'facecolor', 'g');

    set(gca, 'xticklabel', []);
end
id = get(qNew(1), 'ID');
title(id, 'interpreter', 'none', 'fontsize', 8);



% --- Executes on slider movement.
function slDisplayRange_Callback(hObject, eventdata, handles)
% hObject    handle to slDisplayRange (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider
val = get(hObject, 'Value');

% undo the old scaling
oldVal  =  (handles.displayRange(2)/handles.fullRange);
d = get(handles.hImage, 'CData');
set(handles.hImage, 'CData', d*(oldVal/val));
d = get(handles.hSpot, 'CData');
set(handles.hSpot, 'CData', d*(oldVal/val));


handles.displayRange(2) = val * handles.fullRange;
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function slDisplayRange_CreateFcn(hObject, eventdata, handles)
% hObject    handle to slDisplayRange (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end




% --------------------------------------------------------------------
function cmDisplayRange_Callback(hObject, eventdata, handles)
% hObject    handle to cmDisplayRange (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function cmDisplayRange8Bit_Callback(hObject, eventdata, handles)
% hObject    handle to cmDisplayRange8Bit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.cmDisplayRange8Bit, 'checked', 'on');
set(handles.cmDisplayRange12Bit, 'checked', 'off');
set(handles.cmDisplayRange16Bit, 'checked', 'off');
handles.fullRange = 2^8;

% --------------------------------------------------------------------
function cmDisplayRange12Bit_Callback(hObject, eventdata, handles)
% hObject    handle to cmDisplayRange12Bit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.cmDisplayRange8Bit, 'checked', 'off');
set(handles.cmDisplayRange12Bit, 'checked', 'on');
set(handles.cmDisplayRange16Bit, 'checked', 'off');
handles.fullRange = 2^12;

% --------------------------------------------------------------------
function cmDisplayRange16Bit_Callback(hObject, eventdata, handles)
% hObject    handle to cmDisplayRange16Bit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.cmDisplayRange8Bit, 'checked', 'off');
set(handles.cmDisplayRange12Bit, 'checked', 'off');
set(handles.cmDisplayRange16Bit, 'checked', 'on');
handles.fullRange = 2^16;



% --- Creates and returns a handle to the GUI figure. 
function h1 = presenter_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'axes', 10, ...
    'uipanel', 3, ...
    'checkbox', 4, ...
    'slider', 2, ...
    'text', 2), ...
    'override', 0, ...
    'release', 13, ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', 'C:\PamSoft\DataAnalysis\classes\@spotQuantification\private\presenter_export.m');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];

h1 = figure(...
'Units','characters',...
'Color',[0.925490196078431 0.913725490196078 0.847058823529412],...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'IntegerHandle','off',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'MenuBar','none',...
'Name','presenter',...
'NumberTitle','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'Position',[103.8 16.4615384615385 181.4 45],...
'Resize','off',...
'HandleVisibility','callback',...
'Tag','figure1',...
'UserData',[],...
'Behavior',get(0,'defaultfigureBehavior'),...
'Visible','on',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'axImage';

h2 = axes(...
'Parent',h1,...
'Units','characters',...
'Position',[9.8 10.2307692307692 80.2 32.3076923076923],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[14.56 3.55384615384615 10.64 2.42307692307692],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'ButtonDownFcn','presenter_export(''axImage_Callback'',gcbo,[],guidata(gcbo))',...
'Tag','axImage',...
'Behavior',get(0,'defaultaxesBehavior'),...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

h3 = get(h2,'title');

set(h3,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.5 1.01547619047619 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h4 = get(h2,'xlabel');

set(h4,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.497506234413965 -0.055952380952381 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h5 = get(h2,'ylabel');

set(h5,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.071072319201995 0.496428571428571 1.00005459937205],...
'Rotation',90,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h6 = get(h2,'zlabel');

set(h6,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.123441396508728 1.07261904761905 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'uipanel1';

h7 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title','Spot',...
'Tag','uipanel1',...
'Behavior',get(0,'defaultuipanelBehavior'),...
'Clipping','on',...
'Position',[99.8 31.2307692307692 75 11.3846153846154],...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'axTrueSpot';

h8 = axes(...
'Parent',h7,...
'Units','characters',...
'Position',[9.8 2.07692307692308 23.4 7.76923076923077],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[23.582 4.95 17.233 3.375],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','axTrueSpot',...
'Behavior',get(0,'defaultaxesBehavior'),...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

h9 = get(h8,'title');

set(h9,...
'Parent',h8,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.5 1.06435643564356 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h10 = get(h8,'xlabel');

set(h10,...
'Parent',h8,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.491452991452991 -0.232673267326733 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h11 = get(h8,'ylabel');

set(h11,...
'Parent',h8,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.243589743589744 0.49009900990099 1.00005459937205],...
'Rotation',90,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h12 = get(h8,'zlabel');

set(h12,...
'Parent',h8,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-4.70512820512821 1.47029702970297 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'axSegSpot';

h13 = axes(...
'Parent',h7,...
'Units','characters',...
'Position',[42.6 2.07692307692308 23.4 7.76923076923077],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[23.582 4.95 17.233 3.375],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','axSegSpot',...
'Behavior',get(0,'defaultaxesBehavior'),...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

h14 = get(h13,'title');

set(h14,...
'Parent',h13,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.5 1.06435643564356 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h15 = get(h13,'xlabel');

set(h15,...
'Parent',h13,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.491452991452991 -0.232673267326733 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h16 = get(h13,'ylabel');

set(h16,...
'Parent',h13,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.243589743589744 0.49009900990099 1.00005459937205],...
'Rotation',90,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h17 = get(h13,'zlabel');

set(h17,...
'Parent',h13,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-6.10683760683761 1.47029702970297 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'uipanel2';

h18 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title','Spot Quantification',...
'Tag','uipanel2',...
'Behavior',get(0,'defaultuipanelBehavior'),...
'Clipping','on',...
'Position',[99.8 4.84615384615385 75.8 24.6923076923077],...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'axQuantification';

h19 = axes(...
'Parent',h18,...
'Units','characters',...
'Position',[11.6 5.30769230769231 58.4 16.9230769230769],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[9.75 2.58076923076923 7.125 1.75961538461539],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','axQuantification',...
'Behavior',get(0,'defaultaxesBehavior'),...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, '', appdata} );

h20 = get(h19,'title');

set(h20,...
'Parent',h19,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.498287671232877 1.02954545454545 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h21 = get(h19,'xlabel');

set(h21,...
'Parent',h19,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.498287671232877 -0.106818181818182 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h22 = get(h19,'ylabel');

set(h22,...
'Parent',h19,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.0976027397260273 0.493181818181818 1.00005459937205],...
'Rotation',90,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

h23 = get(h19,'zlabel');

set(h23,...
'Parent',h19,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-1.91609589041096 2.04318181818182 1.00005459937205],...
'Rotation',0,...
'String','',...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey','',...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag','',...
'UserData',[],...
'Behavior',struct(),...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'cbSig';

h24 = uicontrol(...
'Parent',h18,...
'Units','characters',...
'Callback','presenter_export(''cbSig_Callback'',gcbo,[],guidata(gcbo))',...
'Position',[13 2.69230769230769 15.2 1.30769230769231],...
'String','Sig',...
'Style','checkbox',...
'Value',1,...
'Tag','cbSig',...
'Behavior',get(0,'defaultuicontrolBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'cbBg';

h25 = uicontrol(...
'Parent',h18,...
'Units','characters',...
'Callback','presenter_export(''cbBg_Callback'',gcbo,[],guidata(gcbo))',...
'Position',[35.4 2.69230769230769 15.2 1.30769230769231],...
'String','Bg',...
'Style','checkbox',...
'Value',1,...
'Tag','cbBg',...
'Behavior',get(0,'defaultuicontrolBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'cbSigmBg';

h26 = uicontrol(...
'Parent',h18,...
'Units','characters',...
'Callback','presenter_export(''cbSigmBg_Callback'',gcbo,[],guidata(gcbo))',...
'Position',[52.2 2.69230769230769 15.2 1.30769230769231],...
'String','Sig - Bg',...
'Style','checkbox',...
'Value',1,...
'Tag','cbSigmBg',...
'Behavior',get(0,'defaultuicontrolBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'slDisplayRange';

h27 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[0.9 0.9 0.9],...
'Callback','presenter_export(''slDisplayRange_Callback'',gcbo,[],guidata(gcbo))',...
'Min',0.001,...
'Position',[9.8 7.53846153846154 80.2 1.53846153846154],...
'String',{  'Slider' },...
'Style','slider',...
'Value',1,...
'CreateFcn', {@local_CreateFcn, 'presenter_export(''slDisplayRange_CreateFcn'',gcbo,[],guidata(gcbo))', appdata} ,...
'Tag','slDisplayRange',...
'Behavior',get(0,'defaultuicontrolBehavior'));

appdata = [];
appdata.lastValidTag = 'text1';

h28 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[9.8 5.38461538461539 27 1.92307692307692],...
'String','Display Range',...
'Style','text',...
'Tag','text1',...
'Behavior',get(0,'defaultuicontrolBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'cmDisplayRange';

h29 = uicontextmenu(...
'Parent',h1,...
'Callback','presenter_export(''cmDisplayRange_Callback'',gcbo,[],guidata(gcbo))',...
'Tag','cmDisplayRange',...
'Behavior',get(0,'defaultuicontextmenuBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'cmDisplayRange8Bit';

h30 = uimenu(...
'Parent',h29,...
'Callback','presenter_export(''cmDisplayRange8Bit_Callback'',gcbo,[],guidata(gcbo))',...
'Label','8 bit',...
'Tag','cmDisplayRange8Bit',...
'Behavior',get(0,'defaultuimenuBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'cmDisplayRange12Bit';

h31 = uimenu(...
'Parent',h29,...
'Callback','presenter_export(''cmDisplayRange12Bit_Callback'',gcbo,[],guidata(gcbo))',...
'Label','12 bit',...
'Tag','cmDisplayRange12Bit',...
'Behavior',get(0,'defaultuimenuBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

appdata = [];
appdata.lastValidTag = 'cmDisplayRange16Bit';

h32 = uimenu(...
'Parent',h29,...
'Callback','presenter_export(''cmDisplayRange16Bit_Callback'',gcbo,[],guidata(gcbo))',...
'Label','16 bit',...
'Tag','cmDisplayRange16Bit',...
'Behavior',get(0,'defaultuimenuBehavior'),...
'CreateFcn', {@local_CreateFcn, '', appdata} );

handles = [ h28 ];
set(handles, 'uicontextmenu', h29);


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   eval(createfcn);
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)


%   GUI_MAINFCN provides these command line APIs for dealing with GUIs
%
%      PRESENTER_EXPORT, by itself, creates a new PRESENTER_EXPORT or raises the existing
%      singleton*.
%
%      H = PRESENTER_EXPORT returns the handle to a new PRESENTER_EXPORT or the handle to
%      the existing singleton*.
%
%      PRESENTER_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in PRESENTER_EXPORT.M with the given input arguments.
%
%      PRESENTER_EXPORT('Property','Value',...) creates a new PRESENTER_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before untitled_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to untitled_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".

%   Copyright 1984-2004 The MathWorks, Inc.
%   $Revision: 1.2 $ $Date: 2005/12/14 15:08:23 $

gui_StateFields =  {'gui_Name'
                    'gui_Singleton'
                    'gui_OpeningFcn'
                    'gui_OutputFcn'
                    'gui_LayoutFcn'
                    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error('Could not find field %s in the gui_State struct in GUI M-file %s', gui_StateFields{i}, gui_Mfile);        
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % PRESENTER_EXPORT
    % create the GUI
    gui_Create = 1;
elseif isequal(ishandle(varargin{1}), 1) && ispc && iscom(varargin{1}) && isequal(varargin{1},gcbo)
    % PRESENTER_EXPORT(ACTIVEX,...)    
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif ischar(varargin{1}) && numargin>1 && isequal(ishandle(varargin{2}), 1)
    % PRESENTER_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = 0;
else
    % PRESENTER_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = 1;
end

if gui_Create == 0
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else
        feval(varargin{:});
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.
    
    % Do feval on layout code in m-file if it exists
    if ~isempty(gui_State.gui_LayoutFcn)
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);
        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen')
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt);            
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt);            
        end
    end
    
    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    
    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig 
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end
    
    % If user specified 'Visible','off' in p/v pairs, don't make the figure
    % visible.
    gui_MakeVisible = 1;
    for ind=1:2:length(varargin)
        if length(varargin) == ind
            break;
        end
        len1 = min(length('visible'),length(varargin{ind}));
        len2 = min(length('off'),length(varargin{ind+1}));
        if ischar(varargin{ind}) && ischar(varargin{ind+1}) && ...
                strncmpi(varargin{ind},'visible',len1) && len2 > 1
            if strncmpi(varargin{ind+1},'off',len2)
                gui_MakeVisible = 0;
            elseif strncmpi(varargin{ind+1},'on',len2)
                gui_MakeVisible = 1;
            end
        end
    end
    
    % Check for figure param value pairs
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end
        try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end
    
    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});
    
    if ishandle(gui_hFigure)
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
        
        % Make figure visible
        if gui_MakeVisible
            set(gui_hFigure, 'Visible', 'on')
            if gui_Options.singleton 
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        rmappdata(gui_hFigure,'InGUIInitialization');
    end
    
    % If handle visibility is set to 'callback', turn it on until finished with
    % OutputFcn
    if ishandle(gui_hFigure)
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end
    
    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end
    
    if ishandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end    

function gui_hFigure = local_openfig(name, singleton)

% this application data is used to indicate the running mode of a GUIDE
% GUI to distinguish it from the design mode of the GUI in GUIDE.
setappdata(0,'OpenGuiWhenRunning',1);

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
try 
    gui_hFigure = openfig(name, singleton, 'auto');
catch
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = openfig(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
end
rmappdata(0,'OpenGuiWhenRunning');

